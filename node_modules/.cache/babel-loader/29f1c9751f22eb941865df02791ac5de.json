{"ast":null,"code":"var _jsxFileName = \"/Users/amitdoodhwal/rdv/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { SUBMIT_FORM } from './actionCreators/actionTypes';\nimport { store } from './store.js';\n\nconst mapStateToProps = state => {\n  return {\n    email: state.Info.email,\n    mobile: state.Info.mobile,\n    first_name: state.Info.first_name,\n    last_name: state.Info.last_name // careType : state.overallReport.careType,\n    // department : state.overallReport.department,\n    // unit: state.overallReport.unit,\n    // selected : {...state.overallReport.selected}, \n    // descriptiveList : state.overallReport.JSON.descriptive,\n    // bacteriaList : state.overallReport.JSON.bacteria,\n    // token: state.auth.token,\n    // startDate: state.overallReport.startDate,\n    // endDate: state.overallReport.endDate,\n    // unit: state.overallReport.unit,\n    // showMDRO : state.overallReport.showMDRO,\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  // onListUpdate : (value) => dispatch ({type:UPDATE_JSON_DATA, key: 'descriptive', value }),\n  // onSelectionChange : (key,value) => dispatch({'type':UPDATE_SELECTION_DATA, 'key' : key, value}),\n  // onShowMDRO : (value) => dispatch ({type: UPDATE_FIELD_HEADER, key:'showMDRO',value}),\n  // onInitialiseAntibiotic : ()=> dispatch({type : UPDATE_SELECTION_DATA,key : 'antibiotic',value : false}),\n  // onInitialiseBacteria : () => {\n  // \tdispatch({type:UPDATE_SELECTION_DATA, key: 'bacteria' , value : false});\n  // \tdispatch({type:UPDATE_SELECTION_DATA, key: 'mdro' , value :false});\n  onFillupFields: value => dispatch({\n    type: SUBMIT_FORM,\n    key: 'submitForm',\n    value\n  })\n});\n\nfunction submit(opts) {\n  fetch('https://rdv.org/register', {\n    method: 'post',\n    body: JSON.stringify(opts)\n  }).then(function (response) {\n    return response.json();\n  });\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      console.log(event.target.value);\n      console.log(this.props.first_name);\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.handleChange1 = event => {\n      console.log(event.target.value);\n      this.setState({\n        mobile: event.target.value\n      });\n    };\n\n    this.state = {\n      visiblity: true,\n      name: this.props.first_name,\n      mobile: this.props.mobile\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      placeholder: \"with a placeholder\",\n      onChange: event => this.handleChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"Mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Mobile\"), React.createElement(Input, {\n      type: \"mobile\",\n      name: \"mobile\",\n      id: \"mobile\",\n      placeholder: \"with a placeholder\",\n      onChange: event => this.handleChange1(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.props.onFillupFields(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // export default App;","map":{"version":3,"sources":["/Users/amitdoodhwal/rdv/src/App.js"],"names":["React","Button","Form","FormGroup","Label","Input","FormText","connect","SUBMIT_FORM","store","mapStateToProps","state","email","Info","mobile","first_name","last_name","mapDispatchToProps","dispatch","onFillupFields","value","type","key","submit","opts","fetch","method","body","JSON","stringify","then","response","json","App","Component","constructor","props","handleChange","event","console","log","target","setState","handleChange1","visiblity","name","bind","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {SUBMIT_FORM} from './actionCreators/actionTypes';\nimport {store} from './store.js'\n\nconst mapStateToProps = (state) => {\n\treturn {\n      email : state.Info.email,\n      mobile : state.Info.mobile,\n      first_name : state.Info.first_name,\n      last_name : state.Info.last_name,\n\t\t// careType : state.overallReport.careType,\n\t\t// department : state.overallReport.department,\n\t\t// unit: state.overallReport.unit,\n\t\t// selected : {...state.overallReport.selected}, \n\t\t// descriptiveList : state.overallReport.JSON.descriptive,\n\t\t// bacteriaList : state.overallReport.JSON.bacteria,\n\t\t// token: state.auth.token,\n\t\t// startDate: state.overallReport.startDate,\n\t\t// endDate: state.overallReport.endDate,\n\t\t// unit: state.overallReport.unit,\n\t\t// showMDRO : state.overallReport.showMDRO,\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\t// onListUpdate : (value) => dispatch ({type:UPDATE_JSON_DATA, key: 'descriptive', value }),\n\t// onSelectionChange : (key,value) => dispatch({'type':UPDATE_SELECTION_DATA, 'key' : key, value}),\n\t// onShowMDRO : (value) => dispatch ({type: UPDATE_FIELD_HEADER, key:'showMDRO',value}),\n\t// onInitialiseAntibiotic : ()=> dispatch({type : UPDATE_SELECTION_DATA,key : 'antibiotic',value : false}),\n\t// onInitialiseBacteria : () => {\n\t// \tdispatch({type:UPDATE_SELECTION_DATA, key: 'bacteria' , value : false});\n  // \tdispatch({type:UPDATE_SELECTION_DATA, key: 'mdro' , value :false});\n  onFillupFields: (value) => dispatch ({type: SUBMIT_FORM, key: 'submitForm', value}),\n})\n\n\n\n\n\nfunction submit(opts){\n  fetch('https://rdv.org/register', {\n    method: 'post',\n    body: JSON.stringify(opts)\n  }).then(function(response) {\n    return response.json();\n  });\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      visiblity : true,\n      name: this.props.first_name,\n      mobile: this.props.mobile,\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n  \n  handleChange = event => {\n    console.log(event.target.value)\n    console.log(this.props.first_name)\n    this.setState({\n        email : event.target.value,\n      })\n  }\n\n  handleChange1 = event => {\n    console.log(event.target.value)\n    this.setState({\n        mobile : event.target.value,\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <Form>\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email</Label>\n            <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\"  onChange = {event => this.handleChange(event)} />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"Mobile\">Mobile</Label>\n            <Input type=\"mobile\" name=\"mobile\" id=\"mobile\" placeholder=\"with a placeholder\"  onChange = {event => this.handleChange1(event)} />\n          </FormGroup>\n          <Button onClick={this.props.onFillupFields()}>Submit</Button>\n        </Form>\n      </div>\n    )  \n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n// export default App;\n"]},"metadata":{},"sourceType":"module"}