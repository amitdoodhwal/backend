{"ast":null,"code":"import _defineProperty from \"/Users/amitdoodhwal/rdv/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/amitdoodhwal/rdv/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport './App.css';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { SUBMIT_FORM } from './actionCreators/actionTypes';\nimport { store } from '../../store.js';\n\nconst mapStateToProps = state => {\n  return {\n    careType: state.overallReport.careType,\n    department: state.overallReport.department,\n    unit: state.overallReport.unit,\n    selected: _objectSpread({}, state.overallReport.selected),\n    descriptiveList: state.overallReport.JSON.descriptive,\n    bacteriaList: state.overallReport.JSON.bacteria,\n    token: state.auth.token,\n    startDate: state.overallReport.startDate,\n    endDate: state.overallReport.endDate,\n    unit: state.overallReport.unit,\n    showMDRO: state.overallReport.showMDRO\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onListUpdate: value => dispatch({\n    type: UPDATE_JSON_DATA,\n    key: 'descriptive',\n    value\n  }),\n  onSelectionChange: (key, value) => dispatch({\n    'type': UPDATE_SELECTION_DATA,\n    'key': key,\n    value\n  }),\n  onShowMDRO: value => dispatch({\n    type: UPDATE_FIELD_HEADER,\n    key: 'showMDRO',\n    value\n  }),\n  onInitialiseAntibiotic: () => dispatch({\n    type: UPDATE_SELECTION_DATA,\n    key: 'antibiotic',\n    value: false\n  }),\n  onInitialiseBacteria: () => {\n    dispatch({\n      type: UPDATE_SELECTION_DATA,\n      key: 'bacteria',\n      value: false\n    });\n    dispatch({\n      type: UPDATE_SELECTION_DATA,\n      key: 'mdro',\n      value: false\n    });\n  }\n});\n\nfunction submit(opts) {\n  fetch('https://rdv.org/register', {\n    method: 'post',\n    body: JSON.stringify(opts)\n  }).then(function (response) {\n    return response.json();\n  });\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.handleChange1 = event => {\n      console.log(event.target.value);\n      this.setState({\n        mobile: event.target.value\n      });\n    };\n\n    this.state = {\n      email: 'NULL@gmail.com',\n      mobile: 12345\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      placeholder: \"with a placeholder\",\n      onChange: event => this.handleChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"Mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Mobile\"), React.createElement(Input, {\n      type: \"mobile\",\n      name: \"mobile\",\n      id: \"mobile\",\n      placeholder: \"with a placeholder\",\n      onChange: event => this.handleChange1(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: submit(this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // export default App;","map":{"version":3,"sources":["/Users/amitdoodhwal/rdv/src/App.js"],"names":["React","Button","Form","FormGroup","Label","Input","FormText","connect","SUBMIT_FORM","store","mapStateToProps","state","careType","overallReport","department","unit","selected","descriptiveList","JSON","descriptive","bacteriaList","bacteria","token","auth","startDate","endDate","showMDRO","mapDispatchToProps","dispatch","onListUpdate","value","type","UPDATE_JSON_DATA","key","onSelectionChange","UPDATE_SELECTION_DATA","onShowMDRO","UPDATE_FIELD_HEADER","onInitialiseAntibiotic","onInitialiseBacteria","submit","opts","fetch","method","body","stringify","then","response","json","App","Component","constructor","props","handleChange","event","console","log","target","setState","email","handleChange1","mobile","bind","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {SUBMIT_FORM} from './actionCreators/actionTypes';\nimport {store} from '../../store.js'\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcareType : state.overallReport.careType,\n\t\tdepartment : state.overallReport.department,\n\t\tunit: state.overallReport.unit,\n\t\tselected : {...state.overallReport.selected}, \n\t\tdescriptiveList : state.overallReport.JSON.descriptive,\n\t\tbacteriaList : state.overallReport.JSON.bacteria,\n\t\ttoken: state.auth.token,\n\t\tstartDate: state.overallReport.startDate,\n\t\tendDate: state.overallReport.endDate,\n\t\tunit: state.overallReport.unit,\n\t\tshowMDRO : state.overallReport.showMDRO,\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\tonListUpdate : (value) => dispatch ({type:UPDATE_JSON_DATA, key: 'descriptive', value }),\n\tonSelectionChange : (key,value) => dispatch({'type':UPDATE_SELECTION_DATA, 'key' : key, value}),\n\tonShowMDRO : (value) => dispatch ({type: UPDATE_FIELD_HEADER, key:'showMDRO',value}),\n\tonInitialiseAntibiotic : ()=> dispatch({type : UPDATE_SELECTION_DATA,key : 'antibiotic',value : false}),\n\tonInitialiseBacteria : () => {\n\t\tdispatch({type:UPDATE_SELECTION_DATA, key: 'bacteria' , value : false});\n\t\tdispatch({type:UPDATE_SELECTION_DATA, key: 'mdro' , value :false});\n\t},\n})\n\n\n\n\n\nfunction submit(opts){\n  fetch('https://rdv.org/register', {\n    method: 'post',\n    body: JSON.stringify(opts)\n  }).then(function(response) {\n    return response.json();\n  });\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      email : 'NULL@gmail.com',\n      mobile : 12345\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n  \n  handleChange = event => {\n    console.log(event.target.value)\n    this.setState({\n        email : event.target.value,\n      })\n  }\n\n  handleChange1 = event => {\n    console.log(event.target.value)\n    this.setState({\n        mobile : event.target.value,\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <Form>\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email</Label>\n            <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\"  onChange = {event => this.handleChange(event)} />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"Mobile\">Mobile</Label>\n            <Input type=\"mobile\" name=\"mobile\" id=\"mobile\" placeholder=\"with a placeholder\"  onChange = {event => this.handleChange1(event)} />\n          </FormGroup>\n          <Button onClick={submit(this.state)}>Submit</Button>\n        </Form>\n      </div>\n    )  \n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n// export default App;\n"]},"metadata":{},"sourceType":"module"}